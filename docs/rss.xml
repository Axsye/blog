<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Koude's Blog</title><link>https://Axsye.github.io/blog</link><description>随便记录一些学习笔记</description><copyright>Koude's Blog</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/64404224?s=400&amp;u=98b0649d0de846e66310504be3905c6eaa0dd178&amp;v=4</url><title>avatar</title><link>https://Axsye.github.io/blog</link></image><lastBuildDate>Fri, 06 Sep 2024 13:00:41 +0000</lastBuildDate><managingEditor>Koude's Blog</managingEditor><ttl>60</ttl><webMaster>Koude's Blog</webMaster><item><title>【KISS Protocol】 KISS 协议</title><link>https://Axsye.github.io/blog/post/%E3%80%90KISS%20Protocol%E3%80%91%20KISS%20-xie-yi.html</link><description># 1. KISS是啥 from Bing:&#13;
The **KISS protocol** (Keep It Simple, Stupid) is used in amateur radio to facilitate communication between a computer and a Terminal Node Controller (TNC). It simplifies the process by removing complex protocol handling from the TNC and shifting it to the host computer¹².&#13;
&#13;
Here are some key points about the KISS protocol:&#13;
- **Purpose**: It allows the TNC to handle basic tasks while the host computer manages more complex protocol functions².&#13;
- **Functionality**: The protocol uses simple commands to control the TNC and transmit data¹.&#13;
- **Common Use**: It's often used with AX.25 packet radio frames and is popular in TCP/IP operations over amateur radio².&#13;
&#13;
&#13;
&#13;
源: 与 Copilot 的对话， 2024/9/6&#13;
[1] KISS (amateur radio protocol) - Wikipedia. (https://en.wikipedia.org/wiki/KISS_(amateur_radio_protocol))&#13;
(2) KISS Protocol - AX.(http://www.ax25.net/kiss.aspx)&#13;
(3) KISS, HDLC, AX.25 and friends – Daniel Estévez. (https://destevez.net/2016/06/kiss-hdlc-ax-25-and-friends/).&#13;
&#13;
---&#13;
The KISS protocol has several practical applications, particularly in the realm of amateur radio and related fields. Here are a few notable ones:&#13;
&#13;
1. **Packet Radio**: KISS is widely used in packet radio communications, where it helps in transmitting digital data over radio frequencies. It simplifies the interface between the computer and the TNC, making it easier to handle AX.25 packet frames.&#13;
&#13;
2. **Satellite Communications**: Amateur radio operators use KISS for communicating with satellites. It allows for efficient data transmission and reception, which is crucial for satellite telemetry and control.&#13;
&#13;
3. **Emergency Communications**: In emergency situations, KISS can be used to set up quick and reliable communication networks. Its simplicity and efficiency make it ideal for transmitting critical information during disasters.&#13;
&#13;
4. **TCP/IP over Radio**: KISS is often employed in TCP/IP operations over amateur radio, enabling the use of internet protocols over radio links. This is useful for setting up wireless networks in remote areas.&#13;
&#13;
5. **Telemetry and Remote Sensing**: KISS can be used in telemetry systems to transmit sensor data from remote locations to a central monitoring station. This is useful in various fields, including environmental monitoring and scientific research.&#13;
。</description><guid isPermaLink="true">https://Axsye.github.io/blog/post/%E3%80%90KISS%20Protocol%E3%80%91%20KISS%20-xie-yi.html</guid><pubDate>Fri, 06 Sep 2024 12:51:50 +0000</pubDate></item><item><title>【Markdown】 记录写Markdown时遇到的问题</title><link>https://Axsye.github.io/blog/post/%E3%80%90Markdown%E3%80%91%20-ji-lu-xie-Markdown-shi-yu-dao-de-wen-ti.html</link><description># 1. 关于github上markdown不支持[TOC]生成目录&#13;
这篇文章列举了几种解决方法解决办法：&#13;
https://blog.csdn.net/johnjim0/article/details/105353427&#13;
&gt; 目前这些方法里面还没有特别满意的&#13;
&#13;
这篇文章写了使用GitHub-Markdown-Toc的解决方法&#13;
https://developer.baidu.com/article/details/2870332&#13;
需要使用到npm&#13;
&gt; 暂时没时间折腾，放着之后再说&#13;
。</description><guid isPermaLink="true">https://Axsye.github.io/blog/post/%E3%80%90Markdown%E3%80%91%20-ji-lu-xie-Markdown-shi-yu-dao-de-wen-ti.html</guid><pubDate>Wed, 04 Sep 2024 13:43:43 +0000</pubDate></item><item><title>【ZYNQ】 Zynq UltraScale+ RFSoC ZCU111 Evaluation Kit</title><link>https://Axsye.github.io/blog/post/%E3%80%90ZYNQ%E3%80%91%20Zynq%20UltraScale%2B%20RFSoC%20ZCU111%20Evaluation%20Kit.html</link><description># 官网网址&#13;
https://www.xilinx.com/products/boards-and-kits/zcu111.html&#13;
# 官方User Guide&#13;
&gt; 交互式的说明书，内容多且丰富&#13;
&#13;
https://docs.amd.com/r/en-US/ug1271-zcu111-eval-bd/ZCU111-Evaluation-Board-User-Guide。</description><guid isPermaLink="true">https://Axsye.github.io/blog/post/%E3%80%90ZYNQ%E3%80%91%20Zynq%20UltraScale%2B%20RFSoC%20ZCU111%20Evaluation%20Kit.html</guid><pubDate>Wed, 04 Sep 2024 13:24:30 +0000</pubDate></item><item><title>【CAN】 CAN控制器芯片-SJA1000应用</title><link>https://Axsye.github.io/blog/post/%E3%80%90CAN%E3%80%91%20CAN-kong-zhi-qi-xin-pian--SJA1000-ying-yong.html</link><description># 手册&#13;
[SJA1000.pdf](https://github.com/user-attachments/files/16871073/SJA1000.pdf)&#13;
&#13;
# 芯片网址&#13;
https://www.nxp.com.cn/products/interfaces/can-transceivers/legacy-can/stand-alone-can-controller:SJA1000T&#13;
&#13;
# 中文使用教程&#13;
&gt;主要是一些寄存器特别是BTR0 BTR1 这两个控制波特率的，详见那个常用CAN速率值表格&#13;
&#13;
![image](https://github.com/user-attachments/assets/61c84c3b-9706-463f-8446-0caa2fe17c11)&#13;
![image](https://github.com/user-attachments/assets/06c76789-7d72-4571-9709-b01ac7a94248)&#13;
![image](https://github.com/user-attachments/assets/db6dd05f-e0df-4b39-9b32-5f461cd38fac)&#13;
。</description><guid isPermaLink="true">https://Axsye.github.io/blog/post/%E3%80%90CAN%E3%80%91%20CAN-kong-zhi-qi-xin-pian--SJA1000-ying-yong.html</guid><pubDate>Wed, 04 Sep 2024 13:17:55 +0000</pubDate></item><item><title>【STM32】 通过bytes发送float类型-转换问题</title><link>https://Axsye.github.io/blog/post/%E3%80%90STM32%E3%80%91%20-tong-guo-bytes-fa-song-float-lei-xing---zhuan-huan-wen-ti.html</link><description># STM32对于float类型处理&#13;
![image](https://github.com/user-attachments/assets/e0cef6c9-7edd-4b3c-a03f-6d2b500c3759)&#13;
stm32采用IEEE 754, 但是是**高位字节在前**&#13;
从上图（https://www.h-schmidt.net/FloatConverter/IEEE754.html）&#13;
可以看出，对于windows，是低位在前。</description><guid isPermaLink="true">https://Axsye.github.io/blog/post/%E3%80%90STM32%E3%80%91%20-tong-guo-bytes-fa-song-float-lei-xing---zhuan-huan-wen-ti.html</guid><pubDate>Tue, 13 Aug 2024 14:12:46 +0000</pubDate></item><item><title>【MIT 6.175】00-序</title><link>https://Axsye.github.io/blog/post/%E3%80%90MIT%206.175%E3%80%9100--xu.html</link><description># 一、几门相关课程&#13;
&#13;
🔔视频：&#13;
[新手上路指导-重要必看] https://www.bilibili.com/video/BV1u8411i7Qw/?spm_id_from=333.999.0.0&#13;
[学习经验分享] https://www.bilibili.com/video/BV1cs4y1r7T3/?spm_id_from=333.337.search-card.all.click&#13;
每周3-4天的情况下，花2个月学完&#13;
两份教材&#13;
![image](https://github.com/user-attachments/assets/3b62da77-ab0d-44f3-a79a-89a79338d42a)&#13;
http://csg.csail.mit.edu/6.375/6_375_2019_www/resources/Logic_Design.pdf&#13;
http://csg.csail.mit.edu/6.175/resources/archbook_2015-08-25.pdf&#13;
bluespec那个docx很重要&#13;
![image](https://github.com/user-attachments/assets/5639f81e-64b8-4a02-a0cc-6cfe6af9da88)&#13;
&#13;
🔔文章：&#13;
[Q&amp;A] https://mp.weixin.qq.com/s/-MnRFCXHy5v-tt4MujfqtQ&#13;
[学习笔记] https://mp.weixin.qq.com/s/I5bPw_AUWTh2VgzAm4SHhg&#13;
&#13;
笔记补充：&#13;
【kazutoiris/connectal】https://github.com/kazutoiris/connectal-docker&#13;
&#13;
## 6.004 &#13;
&#13;
MIT 6.004- https://b23.tv/o7YjSkA&#13;
基础课程，共25节视频课（Arvind教授），数电、计组、BSV，B站有相关视频，没有实验&#13;
【【MIT公开课】6.004 计算结构 · 2019年春（完结·中英字幕·机翻）】 https://www.bilibili.com/video/BV197411s736/?p=4&amp;share_source=copy_web&amp;vd_source=1735967fff393ffa3d39f23c1c1f2362&#13;
![屏幕截图 2024-07-26 003836](https://github.com/user-attachments/assets/76f03ad7-6f70-4dec-bd70-2b76b9e445a0)&#13;
![屏幕截图 2024-07-26 004910](https://github.com/user-attachments/assets/97f444b9-8c86-4a16-bdc5-39dc79f646e6)&#13;
&#13;
## 6.175 &#13;
&#13;
MIT 6.17- 5共23个lecture，8个lab，1个project&#13;
http://csg.csail.mit.edu/6.175/index.html&#13;
主要课程，有课件和学习资料，有完善的Lab和Project，6.004的视频配合6.175的课件开展&#13;
![屏幕截图 2024-07-26 005305](https://github.com/user-attachments/assets/9b1cab55-4158-4726-abf2-7db22e856b07)&#13;
![屏幕截图 2024-07-26 005600](https://github.com/user-attachments/assets/f47e7642-2e36-41b7-9153-027f7da2267d)&#13;
&#13;
## 6.375 &#13;
&#13;
MIT 6.375- 共13个lecture，5个lab，1个project&#13;
http://csg.csail.mit.edu/6.375/6_375_2019_www/index.html&#13;
实践课程 使用BSV 包含4+1个Lab，穿插到6.175中学习&#13;
（更正，有课件但是和175重复多）&#13;
![image](https://github.com/user-attachments/assets/669abb20-5fc5-482c-bd8a-4fc0a68cac80)&#13;
&#13;
## 1.1.学习顺序&#13;
&#13;
![image](https://github.com/user-attachments/assets/fa459dd3-3c61-4a68-83b5-63d268f68fe0)&#13;
![image](https://github.com/user-attachments/assets/cde7d944-c34e-4812-8f44-ec9a5504f947)&#13;
&#13;
## 1.2.资源使用指南&#13;
&#13;
![image](https://github.com/user-attachments/assets/dd2236ef-0091-49dc-aa8f-5f4ccaad2566)&#13;
![image](https://github.com/user-attachments/assets/9dea0a22-d9fc-436c-91b8-af00589104c2)&#13;
![image](https://github.com/user-attachments/assets/fc86330a-47fa-42af-854c-7bd035dd1e3c)&#13;
![image](https://github.com/user-attachments/assets/825d76df-5936-4975-85a4-bbe832fe9759)&#13;
![image](https://github.com/user-attachments/assets/c1902045-d519-4240-8a2b-cdae84ebc5df)&#13;
![image](https://github.com/user-attachments/assets/5e79f022-96c6-45ed-942e-b6143cf27f92)&#13;
（此处更正不是resource，是handout）&#13;
![image](https://github.com/user-attachments/assets/69ef61a5-3614-431f-82d1-63bf1e45e1dc)&#13;
![image](https://github.com/user-attachments/assets/d3f0a508-6e41-4166-9986-49f871015743)&#13;
&#13;
### 1.2.1.如何获得实验环境&#13;
&#13;
![image](https://github.com/user-attachments/assets/b1ee7b94-28d0-438c-bcaf-694d593a8665)&#13;
![image](https://github.com/user-attachments/assets/0146cb29-e930-409f-b078-2acb4b795abc)&#13;
![image](https://github.com/user-attachments/assets/35a490eb-1d18-4b93-b706-1767d9343284)&#13;
![image](https://github.com/user-attachments/assets/012ce32b-c039-4a06-9ac7-737912af3866)&#13;
（↑这是代码review的标准）&#13;
![image](https://github.com/user-attachments/assets/8dae511e-fca8-4b05-8de3-4b178e4b8ce1)&#13;
![image](https://github.com/user-attachments/assets/5973058b-61c1-4732-ae2c-d8fecdeda563)&#13;
&#13;
### 1.2.2.BSV工具链&#13;
![image](https://github.com/user-attachments/assets/f75c6d4f-993c-4009-8866-0b420e25f99a)&#13;
（docker还完全不了解）&#13;
&#13;
### 1.2.3.RISCV工具链&#13;
![image](https://github.com/user-attachments/assets/80175cd0-9cd6-4f62-8e0d-ae87cf19dd37)&#13;
（这里很可能是容易卡的难点）&#13;
&#13;
### 1.2.4.工具链安装顺序建议&#13;
![image](https://github.com/user-attachments/assets/e3274355-7ded-47f6-b8c3-3d8d1470dcde)&#13;
&#13;
## 1.3.FAQ&#13;
&#13;
![image](https://github.com/user-attachments/assets/c7259655-ebfa-4996-ba4c-730e7d3cf7fb)&#13;
（可能有一些testbench过时了，BSV更新很快）&#13;
![image](https://github.com/user-attachments/assets/934590aa-1530-419d-885c-ae14232369b7)&#13;
![image](https://github.com/user-attachments/assets/7bbc7867-66a4-423b-90a2-b6497167059e)&#13;
（一生一芯内可能有一些关于linux、git等）&#13;
![image](https://github.com/user-attachments/assets/bf5c58c1-4ea6-495c-83b4-115d01c90805)&#13;
&#13;
&#13;
# 二、关于Bluespec&#13;
&#13;
作为更高级的语言，避免过多的尽力花在程序本身，提高效率，着重于体系结构&#13;
&#13;
&#13;
。</description><guid isPermaLink="true">https://Axsye.github.io/blog/post/%E3%80%90MIT%206.175%E3%80%9100--xu.html</guid><pubDate>Wed, 24 Jul 2024 17:01:12 +0000</pubDate></item></channel></rss>